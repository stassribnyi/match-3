{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-9deb9b391e6e6885.js","src/models/point.ts","src/models/icon.ts","src/models/model.ts","src/models/tile.ts","src/models/board.ts","src/models/timer.ts","src/utils/delay.ts","node_modules/howler/dist/howler.js","node_modules/@parcel/runtime-js/lib/runtime-cd27efb677e67f62.js","src/utils/loadAudio.ts","src/utils/setCSSVar.ts","src/ui/createBoard.ts","src/ui/createTile.ts","src/utils/setElementPosition.ts","src/ui/createGoals.ts","src/ui/createTargetScore.ts","src/ui/createScore.ts","src/main.ts","src/ui/createCookingOverlay.ts","src/ui/createMultiplier.ts","src/ui/createLevelUpOverlay.ts","src/ui/createGameOverOverlay.ts","src/ui/createGrid.ts","src/ui/createTotalScore.ts","src/ui/createLevel.ts","src/ui/createMenu.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"aT88m\\\":\\\"index.b3321786.js\\\",\\\"9aSXQ\\\":\\\"effects.5e8b5d91.mp3\\\"}\"));","export class Point {\r\n  constructor(public x: number, public y: number) {}\r\n\r\n  static areSiblings(point1: Point, point2: Point) {\r\n    // exclude diagonals from siblings\r\n    if (point1.x !== point2.x && point1.y !== point2.y) {\r\n      return false;\r\n    }\r\n\r\n    return (\r\n      Math.abs(point1.x - point2.x) <= 1 && Math.abs(point1.y - point2.y) <= 1\r\n    );\r\n  }\r\n}\r\n","export enum Icon {\r\n  Crystal = 'crystal',\r\n  Mushroom = 'mushroom',\r\n  Pumpkin = 'pumpkin',\r\n  Stone = 'stone',\r\n  Skull = 'skull',\r\n  Hat = 'hat',\r\n  Flask = 'flask',\r\n}\r\n","export class Model<T extends object> {\r\n  private eventListeners = new Map<keyof T, Array<(value: any) => void>>();\r\n\r\n  constructor() {\r\n    const _this = this;\r\n\r\n    return new Proxy(_this, {\r\n      set(target, property, value, receiver) {\r\n        _this.notify(property as keyof T, value);\r\n\r\n        return Reflect.set(target, property, value, receiver);\r\n      },\r\n    });\r\n  }\r\n\r\n  subscribe<K extends keyof T>(property: K, callback: (value: T[K]) => void) {\r\n    const handlers = this.eventListeners.get(property) || [];\r\n\r\n    this.eventListeners.set(property, [...handlers, callback]);\r\n  }\r\n\r\n  unsubscribe<K extends keyof T>(property: K, callback: (value: T[K]) => void) {\r\n    const handlers = this.eventListeners.get(property) || [];\r\n\r\n    this.eventListeners.set(\r\n      property,\r\n      handlers.filter((handler) => handler !== callback)\r\n    );\r\n  }\r\n\r\n  protected notify<K extends keyof T>(property: K, value: T[K]) {\r\n    this.eventListeners.get(property)?.forEach((callback) => callback(value));\r\n  }\r\n}\r\n","import { Icon } from './icon';\r\nimport { Model } from './model';\r\nimport { Point } from './point';\r\n\r\ninterface ITile {\r\n  position: Point;\r\n  icon: Icon | null;\r\n}\r\n\r\nexport class Tile extends Model<ITile> implements ITile {\r\n  constructor(public position: Point, public icon: Icon | null) {\r\n    super();\r\n  }\r\n}\r\n","import { Point } from './point';\r\nimport { Icon } from './icon';\r\nimport { Tile } from './tile';\r\nimport { Model } from './model';\r\n\r\nconst FROZEN_ICONS: Array<Icon | null> = [Icon.Stone];\r\n\r\ninterface IBoard {\r\n  readonly height: number;\r\n  readonly width: number;\r\n  totalScore: number;\r\n  score: number;\r\n  targetScore: number;\r\n  level: number;\r\n  tiles: Array<Tile>;\r\n}\r\n\r\nexport class Board extends Model<IBoard> implements IBoard {\r\n  public totalScore = 0;\r\n  public score = 0;\r\n  public level = 1;\r\n  public targetScore: number = 1000;\r\n\r\n  public tiles: Array<Tile> = [];\r\n  private currentMatches: Array<Array<Tile>> = [];\r\n\r\n  constructor(\r\n    public readonly height: number = 7,\r\n    public readonly width: number = 8\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  generate(isLevelUp = false): void {\r\n    this.tiles = [];\r\n    this.currentMatches = [];\r\n    this.score = 0;\r\n    if (!isLevelUp) {\r\n      this.level = 1;\r\n      this.totalScore = 0;\r\n    }\r\n\r\n    for (let x = 0; x < this.width; x++) {\r\n      for (let y = 0; y < this.height; y++) {\r\n        const position = new Point(x, y);\r\n\r\n        this.tiles.push(new Tile(position, this.getIcon(position)));\r\n      }\r\n    }\r\n\r\n    this.notify('tiles', this.tiles);\r\n  }\r\n\r\n  findByPosition(x: number, y: number): Tile | undefined {\r\n    return this.tiles[x * this.height + y];\r\n  }\r\n\r\n  findXLine(x: number): Array<Tile> {\r\n    const line: Array<Tile> = [];\r\n\r\n    // using for loop helps to reduce unnecessary steps while searching required item\r\n    for (let y = 0; y < this.height; y++) {\r\n      const tile = this.findByPosition(x, y);\r\n      if (!tile) {\r\n        continue;\r\n      }\r\n\r\n      line.push(tile);\r\n    }\r\n\r\n    return line;\r\n  }\r\n\r\n  findYLine(y: number): Array<Tile> {\r\n    const line: Array<Tile> = [];\r\n\r\n    // using for loop helps to reduce unnecessary steps while searching required item\r\n    for (let x = 0; x < this.width; x++) {\r\n      const tile = this.findByPosition(x, y);\r\n      if (!tile) {\r\n        continue;\r\n      }\r\n\r\n      line.push(tile);\r\n    }\r\n\r\n    return line;\r\n  }\r\n\r\n  swapTiles(t1: Tile, t2: Tile): void {\r\n    const idxT1 = this.tiles.indexOf(t1);\r\n    const idxT2 = this.tiles.indexOf(t2);\r\n\r\n    if (idxT1 < 0 || idxT2 < 0) {\r\n      return;\r\n    }\r\n\r\n    const position = t1.position;\r\n    t1.position = t2.position;\r\n    t2.position = position;\r\n\r\n    this.tiles[idxT1] = t2;\r\n    this.tiles[idxT2] = t1;\r\n  }\r\n\r\n  resolveMatches(): void {\r\n    this.currentMatches.flat().forEach((tile) => (tile.icon = null));\r\n  }\r\n\r\n  findMatches() {\r\n    this.currentMatches = [];\r\n\r\n    const matchCondition = (tiles: Array<Tile>) => tiles.length >= 3;\r\n\r\n    for (let i = 0; i < this.width; i++) {\r\n      this.currentMatches = [\r\n        ...this.currentMatches,\r\n        ...Board.findClusters(this.findXLine(i)).filter(matchCondition),\r\n        ...Board.findClusters(this.findYLine(i)).filter(matchCondition),\r\n      ];\r\n    }\r\n  }\r\n\r\n  hasMatches(): boolean {\r\n    return this.currentMatches.length > 0;\r\n  }\r\n\r\n  shiftItems() {\r\n    for (let x = 0; x < this.width; x++) {\r\n      const line = this.findXLine(x);\r\n\r\n      for (let i = line.length - 1; i >= 0; i--) {\r\n        for (let j = i - 1; j >= 0; j--) {\r\n          const current = line[i];\r\n          const next = line[j];\r\n\r\n          if (!current.icon && !next.icon) {\r\n            continue;\r\n          }\r\n\r\n          if (!current.icon && next.icon) {\r\n            this.swapTiles(current, next);\r\n            line[i] = next;\r\n            line[j] = current;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // move all empty tiles out of boundaries\r\n    this.tiles.forEach((tile) => {\r\n      if (tile.icon) {\r\n        return;\r\n      }\r\n\r\n      tile.position = new Point(tile.position.x, tile.position.y - this.width);\r\n    });\r\n  }\r\n\r\n  calculateScore(multiplier: number) {\r\n    this.tiles.forEach((tile) => {\r\n      if (tile.icon) {\r\n        return;\r\n      }\r\n\r\n      const score = 100 * multiplier;\r\n      this.score += score;\r\n      this.totalScore += score;\r\n    });\r\n  }\r\n\r\n  calculateTargetScore(level: number) {\r\n    this.targetScore = level * 1500;\r\n  }\r\n\r\n  fillUp() {\r\n    this.tiles.forEach((tile) => {\r\n      if (tile.icon) {\r\n        return;\r\n      }\r\n\r\n      const position = new Point(tile.position.x, tile.position.y + this.width);\r\n\r\n      tile.position = position;\r\n      tile.icon = this.getIcon(position);\r\n    });\r\n  }\r\n\r\n  getIcon({ x, y }: Point): Icon {\r\n    const frozenTiles = this.tiles.filter((tile) =>\r\n      FROZEN_ICONS.includes(tile.icon)\r\n    );\r\n\r\n    // calculate ration of frozen tiles to all\r\n    const frozenRation = (frozenTiles.length / Math.pow(this.width, 2)) * 100;\r\n\r\n    let possibleIcons = [\r\n      Icon.Crystal,\r\n      Icon.Mushroom,\r\n      Icon.Pumpkin,\r\n      Icon.Skull,\r\n      Icon.Hat,\r\n      Icon.Stone,\r\n      Icon.Flask,\r\n    ];\r\n\r\n    // do not add any frozen item if its ration is higher then 5\r\n    if (frozenRation >= 3) {\r\n      possibleIcons = possibleIcons.filter(\r\n        (icon) => !FROZEN_ICONS.includes(icon)\r\n      );\r\n    }\r\n\r\n    // get top left and top elements in order to get icons we want to omit\r\n    // this approach helps to ensure absents of existing matches on generation step\r\n    const previousLeft = this.findByPosition(x, y - 1);\r\n    const previousTop = this.findByPosition(x - 1, y);\r\n\r\n    possibleIcons = possibleIcons.filter(\r\n      (icon) => ![previousTop?.icon, previousLeft?.icon].includes(icon)\r\n    );\r\n\r\n    return possibleIcons[Math.floor(Math.random() * possibleIcons.length)];\r\n  }\r\n\r\n  static canBeSelected(tile: Tile) {\r\n    return tile.icon && !FROZEN_ICONS.includes(tile.icon);\r\n  }\r\n\r\n  static areSwappable(t1: Tile, t2: Tile): boolean {\r\n    if (!Board.canBeSelected(t1) || !Board.canBeSelected(t2)) {\r\n      return false;\r\n    }\r\n\r\n    if (t1.icon === t2.icon) {\r\n      return false;\r\n    }\r\n\r\n    if (!t1.icon || !t2.icon) {\r\n      return false;\r\n    }\r\n\r\n    if (Point.areSiblings(t1.position, t2.position)) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  static findClusters(tiles: Array<Tile>): Array<Array<Tile>> {\r\n    const clusters: Array<Array<Tile>> = [];\r\n    let cluster: Array<Tile> = [];\r\n\r\n    for (let i = 0; i < tiles.length; i++) {\r\n      const element = tiles[i];\r\n\r\n      if (!cluster.length) {\r\n        cluster.push(element);\r\n\r\n        continue;\r\n      }\r\n\r\n      if (cluster[0].icon === element.icon) {\r\n        cluster.push(element);\r\n\r\n        continue;\r\n      }\r\n\r\n      clusters.push(cluster);\r\n      cluster = [element];\r\n    }\r\n\r\n    clusters.push(cluster);\r\n\r\n    return clusters;\r\n  }\r\n\r\n  /**\r\n   * Convert array to matrix, for debugging purposes\r\n   * @returns Matrix with icons\r\n   */\r\n  toMatrix(): Array<Array<Tile['icon'] | undefined>> {\r\n    const matrix = [];\r\n\r\n    for (let y = 0; y < this.height; y++) {\r\n      const row = [];\r\n      for (let x = 0; x < this.width; x++) {\r\n        row.push(this.findByPosition(x, y)?.icon);\r\n      }\r\n\r\n      matrix.push(row);\r\n    }\r\n\r\n    return matrix;\r\n  }\r\n}\r\n","import { Model } from './model';\r\n\r\ninterface ITimer {\r\n  get isRunning(): boolean;\r\n  time: number;\r\n  add: (seconds: number) => void;\r\n  stop: () => void;\r\n  reset: () => void;\r\n  start: () => void;\r\n}\r\n\r\nexport class Timer extends Model<ITimer> implements ITimer {\r\n  private interval?: number | null;\r\n\r\n  public time: number;\r\n\r\n  public get isRunning(): boolean {\r\n    return !!this.interval;\r\n  }\r\n\r\n  constructor(private seconds: number) {\r\n    super();\r\n\r\n    this.time = seconds;\r\n  }\r\n\r\n  public add(seconds: number) {\r\n    // time could not be bigger than initial\r\n    if (this.time + seconds > this.seconds) {\r\n      this.reset();\r\n\r\n      return;\r\n    }\r\n\r\n    this.time += seconds;\r\n  }\r\n\r\n  public start(): void {\r\n    if (this.interval) {\r\n      return;\r\n    }\r\n\r\n    this.interval = setInterval(() => {\r\n      if (this.time === 0) {\r\n        this.stop();\r\n\r\n        return;\r\n      }\r\n\r\n      this.time--;\r\n    }, 1000);\r\n\r\n    this.notify('isRunning', true);\r\n  }\r\n\r\n  public stop(): void {\r\n    if (!this.interval) {\r\n      return;\r\n    }\r\n\r\n    clearInterval(this.interval);\r\n    this.interval = null;\r\n    this.notify('isRunning', false);\r\n  }\r\n\r\n  public reset(): void {\r\n    this.time = this.seconds;\r\n  }\r\n}\r\n","export const delay = (timeout: number): Promise<void> =>\r\n  new Promise((resolve) => {\r\n    setTimeout(resolve, timeout);\r\n  });\r\n","/*!\n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"9aSXQ\")).toString();","import { Howl } from 'howler';\r\nimport { delay } from './delay';\r\n\r\ntype Sprites = 'pop' | 'swap';\r\ntype HowlType = Omit<Howl, 'play'> & {\r\n  play: (spriteOrId?: Sprites | number) => Promise<number>;\r\n};\r\n\r\nconst FACTOR = 1500;\r\n\r\nexport const loadAudio = (): HowlType => {\r\n  const sound = new Howl({\r\n    src: [\r\n      new URL('../../public/sounds/effects.mp3', import.meta.url).toString(),\r\n    ],\r\n    sprite: {\r\n      pop: [0, 108],\r\n      swap: [108, 386],\r\n    },\r\n  });\r\n\r\n  sound.volume(0.5);\r\n\r\n  const playHandler = sound.play;\r\n\r\n  return Object.assign(sound, {\r\n    play: async (spriteOrId?: number | Sprites): Promise<number> => {\r\n      const id = playHandler.call(sound, spriteOrId);\r\n\r\n      await delay(sound.duration(id) * FACTOR);\r\n\r\n      return id;\r\n    },\r\n  });\r\n};\r\n","export const setCSSVar = (name: string, value: string) =>\r\n  document.documentElement.style.setProperty(name, value);\r\n","import { Board, Tile } from 'src/models';\r\n\r\nimport { createTile, TileElement } from './createTile';\r\n\r\nexport type BoardElement = HTMLDivElement &\r\n  Readonly<{\r\n    destroy: () => void;\r\n  }>;\r\n\r\nexport type BoardElementHandlers = Readonly<{\r\n  onTileSelect: (this: HTMLDivElement, ev: MouseEvent) => void;\r\n}>;\r\n\r\nexport const createBoard = (\r\n  board: Board,\r\n  { onTileSelect }: BoardElementHandlers\r\n) => {\r\n  const el = document.createElement('div') as BoardElement;\r\n  el.classList.add('board');\r\n\r\n  const destroyChildren = () =>\r\n    Array.from<TileElement>(el.children as any).forEach((tile) =>\r\n      tile.destroy()\r\n    );\r\n\r\n  const handleTilesChange = (tiles: Array<Tile>) => {\r\n    destroyChildren();\r\n\r\n    el.replaceChildren(\r\n      ...tiles.map((tile) =>\r\n        createTile(tile, {\r\n          onClick: onTileSelect,\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  board.subscribe('tiles', handleTilesChange);\r\n\r\n  return Object.assign(el, {\r\n    destroy: () => {\r\n      board.unsubscribe('tiles', handleTilesChange);\r\n\r\n      destroyChildren();\r\n    },\r\n  });\r\n};\r\n","import { Tile } from 'src/tile';\r\nimport { setElementPosition } from '../utils';\r\n\r\nexport type TileElement = HTMLDivElement &\r\n  Readonly<{\r\n    tile: Tile;\r\n    destroy: () => void;\r\n  }>;\r\n\r\nexport type TileElementHandlers = Readonly<{\r\n  onClick: (this: HTMLDivElement, ev: MouseEvent) => void;\r\n}>;\r\n\r\nexport const createTile = (\r\n  tile: Tile,\r\n  { onClick }: TileElementHandlers\r\n): TileElement => {\r\n  const el = document.createElement('div') as TileElement;\r\n  el.classList.add('tile');\r\n\r\n  const handleIconChange = (icon: Tile['icon']): void => {\r\n    if (!tile.icon && !icon) {\r\n      return;\r\n    }\r\n\r\n    if (tile.icon) {\r\n      el.classList.remove(tile.icon);\r\n    }\r\n\r\n    if (icon) {\r\n      el.classList.add(icon);\r\n    }\r\n  };\r\n\r\n  const handlePositionChange = (position: Tile['position']): void => {\r\n    setElementPosition(el, position);\r\n  };\r\n\r\n  handleIconChange(tile.icon);\r\n  handlePositionChange(tile.position);\r\n\r\n  tile.subscribe('icon', handleIconChange);\r\n  tile.subscribe('position', handlePositionChange);\r\n\r\n  el.addEventListener('click', onClick);\r\n\r\n  return Object.assign(el, {\r\n    tile,\r\n    destroy: () => {\r\n      tile.unsubscribe('icon', handleIconChange);\r\n      tile.unsubscribe('position', handlePositionChange);\r\n\r\n      el.removeEventListener('click', onClick);\r\n    },\r\n  });\r\n};\r\n","import { Point } from 'src/models';\r\n\r\nexport const setElementPosition = (element: HTMLElement, position: Point) => {\r\n  element.style.top = `${position.y}em`;\r\n  element.style.left = `${position.x}em`;\r\n};\r\n","import { Board, Timer } from 'src/models';\r\nimport { createScore } from './createScore';\r\nimport { createTargetScore } from './createTargetScore';\r\n\r\nexport type GoalsElement = HTMLDivElement &\r\n  Readonly<{\r\n    destroy: () => void;\r\n  }>;\r\n\r\n// TODO: find better place to show timer\r\nconst secondsToTimeLeft = (time: number): string =>\r\n  `Time: ${new Date(time * 1000).toISOString().substring(14, 19)}`;\r\n\r\nexport const createGoals = (board: Board, timer: Timer): GoalsElement => {\r\n  const container = document.createElement('div') as GoalsElement;\r\n  const el = document.createElement('ul');\r\n  const pause = document.createElement('li');\r\n  const restart = document.createElement('li');\r\n  const time = document.createElement('li');\r\n  const help = document.createElement('li');\r\n  el.appendChild(createTargetScore(board));\r\n  el.appendChild(createScore(board));\r\n\r\n  time.innerText = secondsToTimeLeft(timer.time);\r\n  el.appendChild(time);\r\n  container.appendChild(el);\r\n  container.classList.add('statistics', 'left');\r\n  const handleTimerChange = (value: number) => {\r\n    time.innerText = secondsToTimeLeft(value);\r\n  };\r\n\r\n  timer.subscribe('time', handleTimerChange);\r\n\r\n  return Object.assign(container, {\r\n    destroy: () => {\r\n      timer.unsubscribe('time', handleTimerChange);\r\n    },\r\n  });\r\n};\r\n","import { Board } from 'src/models';\r\n\r\nexport type TargetScoreElement = HTMLLIElement &\r\n  Readonly<{\r\n    destroy: () => void;\r\n  }>;\r\n\r\nexport const createTargetScore = (board: Board): TargetScoreElement => {\r\n  const el = document.createElement('li') as TargetScoreElement;\r\n\r\n  const handleTargetScoreChange = (target: number) => {\r\n    el.innerText = `Target: ${target} pt`;\r\n  };\r\n\r\n  board.subscribe('targetScore', handleTargetScoreChange);\r\n\r\n  return Object.assign(el, {\r\n    destroy: () => {\r\n      board.unsubscribe('targetScore', handleTargetScoreChange);\r\n    },\r\n  });\r\n};\r\n","import { Board } from 'src/models';\r\n\r\nexport type ScoreElement = HTMLLIElement &\r\n  Readonly<{\r\n    destroy: () => void;\r\n  }>;\r\n\r\nexport const createScore = (board: Board): ScoreElement => {\r\n  const el = document.createElement('li') as ScoreElement;\r\n\r\n  const handleScoreChange = (score: number) => {\r\n    el.innerText = `Current: ${score} pt`;\r\n  };\r\n\r\n  board.subscribe('score', handleScoreChange);\r\n\r\n  return Object.assign(el, {\r\n    destroy: () => {\r\n      board.unsubscribe('score', handleScoreChange);\r\n    },\r\n  });\r\n};\r\n","import { Board, Tile, Timer } from './models';\r\n\r\nimport {\r\n  createBoard,\r\n  createGameOverOverlay,\r\n  createGrid,\r\n  createLevel,\r\n  createLevelUpOverlay,\r\n  createMultiplierOverlay,\r\n  createScore,\r\n  createTargetScore,\r\n  createTimer,\r\n  TileElement,\r\n  TileElementHandlers,\r\n} from './ui';\r\nimport { createCookingOverlay } from './ui/createCookingOverlay';\r\nimport { createGoals } from './ui/createGoals';\r\nimport { createMenu } from './ui/createMenu';\r\nimport { createTotalScore } from './ui/createTotalScore';\r\n\r\nimport { delay, loadAudio, setCSSVar } from './utils';\r\n\r\n// TODO:\r\n// - level\r\n// - score\r\n// - timer\r\n// - get some currency for extra figures\r\n// - refresh withdraw with scores\r\n// - extra figures tracking:\r\n// - square\r\n// - cross\r\n\r\n// Ideas:\r\n// Game should have level based progression,\r\n// each level should have time limit\r\n// time limit should depend on level\r\n// each level should have different goals, for simplicity we can use score target\r\n// score target should depend on level\r\n// there should be some goals based on tiles combinations\r\n// there should be hint with possible combinations and scores\r\n\r\nfunction main() {\r\n  const audioSprite = loadAudio();\r\n\r\n  const board = new Board(7, 8);\r\n  const timer = new Timer(30);\r\n\r\n  const content = document.createElement('div');\r\n  const container = document.createElement('div');\r\n  const statistics = document.createElement('div');\r\n  content.classList.add('content');\r\n  container.classList.add('container');\r\n  statistics.classList.add('statistics');\r\n\r\n  content.appendChild(statistics);\r\n  content.appendChild(container);\r\n  document.body.appendChild(content);\r\n\r\n  const cookingOverlay = createCookingOverlay();\r\n  const multiplierOverlay = createMultiplierOverlay();\r\n  const levelUpOverlay = createLevelUpOverlay();\r\n  const gameOverOverlay = createGameOverOverlay({\r\n    onClick: () => {\r\n      gameOverOverlay.hide();\r\n\r\n      board.generate();\r\n    },\r\n  });\r\n\r\n  (window as any).cookingOverlay = cookingOverlay;\r\n  setCSSVar('--board-rows', `${board.height}`);\r\n  setCSSVar('--board-columns', `${board.width}`);\r\n\r\n  const performTurn = async (tile1: Tile, tile2: Tile) => {\r\n    if (!Board.areSwappable(tile1, tile2)) {\r\n      return;\r\n    }\r\n\r\n    board.swapTiles(tile1, tile2);\r\n    await audioSprite.play('swap');\r\n\r\n    board.findMatches();\r\n\r\n    let multiplier = 0;\r\n\r\n    if (board.hasMatches()) {\r\n      do {\r\n        multiplier++;\r\n\r\n        board.resolveMatches();\r\n        board.shiftItems();\r\n        board.calculateScore(multiplier);\r\n\r\n        if (board.score >= board.targetScore) {\r\n          board.level += 1;\r\n          timer.reset();\r\n          timer.stop();\r\n          levelUpOverlay.show();\r\n          // TODO: play level up sound\r\n          await delay(400);\r\n          cookingOverlay.show();\r\n          await delay(900);\r\n          board.generate(true);\r\n          await delay(900);\r\n          continue;\r\n        } else {\r\n          timer.add(5);\r\n          multiplierOverlay.show(multiplier);\r\n          await audioSprite.play('pop');\r\n        }\r\n\r\n        board.fillUp();\r\n        board.findMatches();\r\n\r\n        await delay(400);\r\n      } while (board.hasMatches());\r\n    } else {\r\n      // revert swap\r\n      board.swapTiles(tile1, tile2);\r\n      await audioSprite.play('swap');\r\n    }\r\n\r\n    // display board state inbetween turns\r\n    console.table(board.toMatrix());\r\n  };\r\n\r\n  let selectedTile: TileElement | null = null;\r\n  const handleTileClick: TileElementHandlers['onClick'] = async (event) => {\r\n    const tileElement = event.target as TileElement;\r\n\r\n    if (!Board.canBeSelected(tileElement.tile)) {\r\n      return;\r\n    }\r\n\r\n    if (!selectedTile) {\r\n      selectedTile = tileElement;\r\n      tileElement.classList.add('active');\r\n      timer.start();\r\n\r\n      return;\r\n    }\r\n\r\n    selectedTile.classList.remove('active');\r\n\r\n    if (selectedTile === tileElement) {\r\n      selectedTile = null;\r\n\r\n      return;\r\n    }\r\n\r\n    await performTurn(selectedTile.tile, tileElement.tile);\r\n\r\n    selectedTile = null;\r\n  };\r\n\r\n  // create board elements\r\n  container.appendChild(createBoard(board, { onTileSelect: handleTileClick }));\r\n  container.appendChild(createGrid(board.width, board.height));\r\n\r\n  // TODO: draw field\r\n  container.appendChild(cookingOverlay);\r\n  container.appendChild(multiplierOverlay);\r\n  container.appendChild(levelUpOverlay);\r\n  container.appendChild(gameOverOverlay);\r\n\r\n  // TODO: reuse statistic item creation logic\r\n  // create statistics\r\n  const ul = document.createElement('ul');\r\n  ul.appendChild(createTotalScore(board));\r\n  ul.appendChild(createLevel(board));\r\n  // ul.appendChild(createTimer(timer));\r\n\r\n  content.appendChild(createMenu(board, timer));\r\n  content.appendChild(createGoals(board, timer));\r\n  //  const help = document.createElement(\"button\");\r\n  //  help.textContent = \"?\";\r\n  //\r\n  //  help.addEventListener(\"click\", ()=> {\r\n  //    alert('help')\r\n  //  })\r\n  //\r\n  //  const buttonLi = document.createElement('li');\r\n  //  buttonLi.appendChild(help);\r\n  //  ul.appendChild(buttonLi)\r\n  statistics.appendChild(ul);\r\n\r\n  timer.subscribe('time', (value) => {\r\n    if (value !== 0) {\r\n      return;\r\n    }\r\n\r\n    // wait before timer sets time value\r\n    delay(1000).then(() => {\r\n      timer.reset();\r\n\r\n      gameOverOverlay.show();\r\n    });\r\n  });\r\n\r\n  // TODO: loader\r\n  // container.style.opacity = '0';\r\n  // ul.style.opacity = '0';\r\n\r\n  board.subscribe('level', (level) => {\r\n    board.calculateTargetScore(level);\r\n  });\r\n  board.generate();\r\n  console.table(board.toMatrix());\r\n\r\n  container.style.opacity = '1';\r\n  ul.style.opacity = '1';\r\n\r\n  // expose board to window to perform debugging in browser\r\n  (window as any).board = board;\r\n  (window as any).timer = timer;\r\n}\r\n\r\nsetTimeout(() => {\r\n  const loader = document.getElementById('splash');\r\n\r\n  if (!loader) {\r\n    return;\r\n  }\r\n\r\n  loader.style.opacity = '0';\r\n\r\n  main();\r\n\r\n  setTimeout(() => {\r\n    loader.style.display = 'none';\r\n  }, 1000);\r\n}, 4200);\r\n","export type CookingOverlayElement = HTMLParagraphElement &\r\n  Readonly<{\r\n    show: () => void;\r\n  }>;\r\n\r\nexport const createCookingOverlay = (): CookingOverlayElement => {\r\n  const el = document.createElement('p') as CookingOverlayElement;\r\n  el.classList.add('cooking');\r\n\r\n  const show = () => {\r\n    el.innerText = `Throw ingredients into the cauldron. . .`;\r\n    el.animate(\r\n      [\r\n        { opacity: 0 },\r\n        { opacity: 0.5 },\r\n        { opacity: 1 },\r\n        { opacity: 1 },\r\n        { opacity: 0.5 },\r\n        { opacity: 0 },\r\n      ],\r\n      {\r\n        duration: 1800,\r\n        direction: 'normal',\r\n        easing: 'ease-in-out',\r\n        fill: 'forwards',\r\n      }\r\n    );\r\n  };\r\n\r\n  return Object.assign(el, {\r\n    show,\r\n  });\r\n};\r\n","export type MultiplierOverlayElement = HTMLParagraphElement &\r\n  Readonly<{\r\n    show: (multiplier: number) => void;\r\n  }>;\r\n\r\nexport const createMultiplierOverlay = (): MultiplierOverlayElement => {\r\n  const el = document.createElement('p') as MultiplierOverlayElement;\r\n  el.classList.add('multiplier');\r\n\r\n  const show = (multiplier: number) => {\r\n    el.innerText = `${multiplier}X`;\r\n    el.animate([{ opacity: 1 }, { transform: 'scale(1.5)' }, { opacity: 0 }], {\r\n      duration: 500,\r\n      direction: 'normal',\r\n      easing: 'ease-in-out',\r\n      fill: 'forwards',\r\n    });\r\n  };\r\n\r\n  return Object.assign(el, {\r\n    show,\r\n  });\r\n};\r\n","export type LevelUpOverlayElement = HTMLParagraphElement &\r\n  Readonly<{\r\n    show: () => void;\r\n  }>;\r\n\r\nexport const createLevelUpOverlay = (): LevelUpOverlayElement => {\r\n  const el = document.createElement('p') as LevelUpOverlayElement;\r\n  el.classList.add('level-up');\r\n\r\n  const show = () => {\r\n    el.innerText = `Level Up!`;\r\n    el.animate([{ opacity: 1 }, { transform: 'scale(1.5)' }, { opacity: 0 }], {\r\n      duration: 800,\r\n      direction: 'normal',\r\n      easing: 'ease-in-out',\r\n      fill: 'forwards',\r\n    });\r\n  };\r\n\r\n  return Object.assign(el, {\r\n    show,\r\n  });\r\n};\r\n","export type GameOverOverlayElement = HTMLParagraphElement &\r\n  Readonly<{\r\n    show: () => void;\r\n    hide: () => void;\r\n  }>;\r\n\r\nexport type GameOverOverlayElementHandlers = Readonly<{\r\n  onClick: (this: HTMLParagraphElement, ev: MouseEvent) => void;\r\n}>;\r\n\r\nexport const createGameOverOverlay = ({\r\n  onClick,\r\n}: GameOverOverlayElementHandlers): GameOverOverlayElement => {\r\n  const el = document.createElement('p') as GameOverOverlayElement;\r\n  el.classList.add('game-over');\r\n  el.innerText = 'Game Over!';\r\n\r\n  const show = () => {\r\n    el.style.opacity = '1';\r\n    el.style.pointerEvents = 'all';\r\n  };\r\n  const hide = () => {\r\n    el.style.opacity = '';\r\n    el.style.pointerEvents = '';\r\n  };\r\n\r\n  el.addEventListener('click', onClick);\r\n\r\n  return Object.assign(el, {\r\n    show,\r\n    hide,\r\n    destroy: () => {\r\n      el.removeEventListener('click', onClick);\r\n    },\r\n  });\r\n};\r\n","export const createGrid = (width: number, height: number) => {\r\n  const grid = document.createElement('div');\r\n  grid.classList.add('grid');\r\n\r\n  for (let x = 0; x < width; x++) {\r\n    const row = document.createElement('div');\r\n    row.classList.add('row');\r\n\r\n    for (let y = 0; y < height; y++) {\r\n      const cell = document.createElement('div');\r\n      cell.classList.add('cell');\r\n\r\n      row.appendChild(cell);\r\n    }\r\n\r\n    grid.appendChild(row);\r\n  }\r\n\r\n  return grid;\r\n};\r\n","import { Board } from 'src/models';\r\n\r\nexport type TotalScoreElement = HTMLLIElement &\r\n  Readonly<{\r\n    destroy: () => void;\r\n  }>;\r\n\r\nexport const createTotalScore = (board: Board): TotalScoreElement => {\r\n  const el = document.createElement('li') as TotalScoreElement;\r\n\r\n  const handleTotalScoreChange = (target: number) => {\r\n    el.innerText = `Total: ${target} pt`;\r\n  };\r\n\r\n  board.subscribe('totalScore', handleTotalScoreChange);\r\n\r\n  return Object.assign(el, {\r\n    destroy: () => {\r\n      board.unsubscribe('targetScore', handleTotalScoreChange);\r\n    },\r\n  });\r\n};\r\n","import { Board } from 'src/models';\r\n\r\nexport type LevelElement = HTMLLIElement &\r\n  Readonly<{\r\n    destroy: () => void;\r\n  }>;\r\n\r\nexport const createLevel = (board: Board): LevelElement => {\r\n  const el = document.createElement('li') as LevelElement;\r\n\r\n  const handleLevelChange = (level: number) => {\r\n    el.innerText = `Level: ${level}`;\r\n  };\r\n\r\n  board.subscribe('level', handleLevelChange);\r\n\r\n  return Object.assign(el, {\r\n    destroy: () => {\r\n      board.unsubscribe('level', handleLevelChange);\r\n    },\r\n  });\r\n};\r\n","import { Board, Timer } from 'src/models';\r\n\r\nexport type MenuElement = HTMLDivElement &\r\n  Readonly<{\r\n    destroy: () => void;\r\n  }>;\r\n\r\n// TODO: find better place to show timer\r\nconst secondsToTimeLeft = (time: number): string =>\r\n  `Time: ${new Date(time * 1000).toISOString().substring(14, 19)}`;\r\n\r\nexport const createMenu = (board: Board, timer: Timer): MenuElement => {\r\n  const container = document.createElement('div') as MenuElement;\r\n  const el = document.createElement('ul');\r\n\r\n  const pause = document.createElement('li');\r\n  const restart = document.createElement('li');\r\n  //   const time = document.createElement('li');\r\n  const help = document.createElement('li');\r\n\r\n  pause.innerText = 'Start';\r\n  restart.innerText = 'Restart';\r\n  //   time.innerText = secondsToTimeLeft(timer.time);\r\n  help.innerText = 'Help';\r\n  el.appendChild(pause);\r\n  el.appendChild(restart);\r\n  //   el.appendChild(time);\r\n  el.appendChild(help);\r\n  container.appendChild(el);\r\n\r\n  container.classList.add('statistics', 'right');\r\n  const handleIsRunningChange = (isRunning: boolean) => {\r\n    pause.innerText = isRunning ? 'Pause' : 'Start';\r\n  };\r\n  //   const handleTimerChange = (value: number) => {\r\n  //     time.innerText = secondsToTimeLeft(value);\r\n  //   };\r\n\r\n  timer.subscribe('isRunning', handleIsRunningChange);\r\n  //   timer.subscribe('time', handleTimerChange);\r\n\r\n  const handlePause = () => {\r\n    if (timer.isRunning) {\r\n      timer.stop();\r\n      return;\r\n    }\r\n    timer.start();\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    board.generate();\r\n    timer.stop();\r\n    timer.reset();\r\n  };\r\n\r\n  pause.addEventListener('click', handlePause);\r\n  restart.addEventListener('click', handleRestart);\r\n  return Object.assign(container, {\r\n    destroy: () => {\r\n      pause.removeEventListener('click', handlePause);\r\n      restart.removeEventListener('click', handleRestart);\r\n      timer.unsubscribe('isRunning', handleIsRunningChange);\r\n      //   timer.unsubscribe('time', handleTimerChange);\r\n    },\r\n  });\r\n};\r\n"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$8505a7b277bef0d2$export$baf26146a414f24a","constructor","x","y","static","point1","point2","Math","abs","$f49d6efd4cdae134$export$f04a61298a47a40f","$6579b0cc71ca4a2f$export$a1edc412be3e1841","eventListeners","Map","_this","this","Proxy","set","target","property","value","receiver","notify","Reflect","subscribe","callback","handlers","get","unsubscribe","filter","handler","forEach","$0466cf47f63296f8$export$235cb65c20ad2b7","position","icon","super","$5f23cfc8ec0894ab$var$FROZEN_ICONS","Stone","$5f23cfc8ec0894ab$export$dc537a3a3893548e","height","width","totalScore","score","level","targetScore","tiles","currentMatches","generate","isLevelUp","push","getIcon","findByPosition","findXLine","line","tile","findYLine","swapTiles","t1","t2","idxT1","indexOf","idxT2","resolveMatches","flat","findMatches","matchCondition","findClusters","hasMatches","shiftItems","j","current","next","calculateScore","multiplier","calculateTargetScore","fillUp","frozenRation","includes","pow","possibleIcons","Crystal","Mushroom","Pumpkin","Skull","Hat","Flask","previousLeft","previousTop","floor","random","canBeSelected","areSiblings","clusters","cluster","element","matrix","row","$e458730ad0f4017c$export$c57e9b2d8b9e4de","isRunning","interval","seconds","time","add","reset","start","setInterval","stop","clearInterval","$c33fac243aad6b84$export$1391212d75b2ee65","timeout","Promise","resolve","setTimeout","$f89d8ffbdc18f2ab$export$b791fe48eec8032a","HowlerGlobal","init","prototype","self","Howler","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","window","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","_webAudio","ids","_getSoundIds","sound","_soundById","_node","mute","muted","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","oncanplaythrough","e","_setupCodecs","audioTest","err","canPlayType","mpegTest","ua","userAgent","checkOpera","match","isOldOpera","parseInt","split","checkSafari","safariVersion","isOldSafari","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","e1","i1","load","_autoResume","source","createBufferSource","buffer","connect","destination","noteOn","resume","onended","disconnect","document","removeEventListener","_emit","addEventListener","_obtainHtml5Audio","pop","testPlay","play","then","catch","console","warn","audio","suspend","_sounds","_paused","_suspendTimer","clearTimeout","handleSuspension","_resumeAfterSuspend","Howl","o","src","error","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","undefined","_xhr","method","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","url","str","exec","toLowerCase","location","protocol","slice","Sound","loadBuffer","internal","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","max","_seek","duration","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","bind","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","arguments","_clearSound","_interval","args","index","apply","fade","from","to","len","min","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","tick","round","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","_endFn","splice","remCache","cache","on","events","off","isId","Array","isArray","msg","call","task","shift","ended","_drain","limit","cnt","_panner","isIOS","vendor","test","howl","_parent","parent","create","createGain","createGainNode","_errorListener","_loadListener","_endListener","code","ceil","__default","loadSound","data","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","XMLHttpRequest","open","responseType","key","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","define","amd","$parcel$global","_super","_pos","_orientation","stereo","pan","pos","z","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","type","createPanner","$da7425e5f0ceca84$exports","URL","import","meta","toString","$b2769d62d582d180$export$cb0b87a6a24ff861","name","documentElement","style","setProperty","$a2315baada8c03c7$export$c1c6fc7b5402fc3c","board","onTileSelect","el","createElement","classList","destroyChildren","children","destroy","handleTilesChange","replaceChildren","map","onClick","handleIconChange","remove","handlePositionChange","top","left","$9d658bd3efad45fa$export$8b5fcc813346f0e9","assign","$aad0d7f2f942289d$export$9b747065b14bfa5f","$7066ae11151d7671$var$secondsToTimeLeft","toISOString","substring","$7066ae11151d7671$export$89cd85799191723b","timer","container","appendChild","handleTargetScoreChange","innerText","$e33be9a5694436c7$export$33786560dd85cf9d","handleScoreChange","$33e39ffc69e520d0$export$bfab3f324e8bcfbb","handleTimerChange","$ad2bcec7a0192558$var$main","audioSprite","swap","playHandler","async","spriteOrId","$b4ac20a090b5ae9a$export$46ab24e432863f2b","content","statistics","body","cookingOverlay","show","animate","opacity","direction","easing","fill","$f7c7c9037287ce35$export$753a52880c576363","multiplierOverlay","transform","$70664a5cbd1f3f77$export$b6a77e93d7b4be38","levelUpOverlay","$8cf3c9affc80a94f$export$2e3f0974bd987995","gameOverOverlay","pointerEvents","hide","$4ccbcaf65e82efb9$export$688f7baa01924db7","selectedTile","tileElement","tile1","tile2","areSwappable","table","toMatrix","performTurn","grid","cell","$b13443571f9d0147$export$fce123c48a7b4eae","ul","handleTotalScoreChange","$6006713dba8de419$export$a734790ccce9c70b","handleLevelChange","$9421400a7007259b$export$667c3e855ecfd537","restart","help","handleIsRunningChange","handlePause","handleRestart","$f8fd28f7d7fb9cab$export$c9a19c59161f09a0","loader","getElementById","display"],"version":3,"file":"index.b3321786.js.map"}