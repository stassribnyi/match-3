{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-63e3fc31ed2b9635.js","src/point.ts","src/Icon.ts","src/model.ts","src/tile.ts","src/board.ts","src/utils/delay.ts","node_modules/@parcel/runtime-js/lib/runtime-a09171d4b846c25e.js","node_modules/@parcel/runtime-js/lib/runtime-37f2c11d034eaebc.js","src/utils/loadAudio.ts","src/main.ts","src/timer.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"aT88m\\\":\\\"index.d1e4b8e8.js\\\",\\\"hFnwJ\\\":\\\"pop.3317084d.m4a\\\",\\\"1Zl8G\\\":\\\"swipe.e2fb1dc6.m4a\\\"}\"));","export class Point {\r\n  constructor(public x: number, public y: number) {}\r\n\r\n  static areSiblings(point1: Point, point2: Point) {\r\n    // exclude diagonals from siblings\r\n    if (point1.x !== point2.x && point1.y !== point2.y) {\r\n      return false;\r\n    }\r\n\r\n    return (\r\n      Math.abs(point1.x - point2.x) <= 1 && Math.abs(point1.y - point2.y) <= 1\r\n    );\r\n  }\r\n}\r\n","export enum Icon {\r\n  Beacon = 'beacon',\r\n  Candy = 'candy',\r\n  Chocolate = 'chocolate',\r\n  Dice = 'dice',\r\n  Lollypop = 'lollypop',\r\n  Poop = 'poop',\r\n}\r\n","export class Model<T extends object> {\r\n  private eventListeners = new Map<keyof T, [(value: any) => void]>();\r\n\r\n  constructor() {\r\n    const _this = this;\r\n\r\n    return new Proxy(_this, {\r\n      set(target, property, value, receiver) {\r\n        _this.notify(property as keyof T, value);\r\n\r\n        return Reflect.set(target, property, value, receiver);\r\n      },\r\n    });\r\n  }\r\n\r\n  subscribe<K extends keyof T>(property: K, callback: (value: T[K]) => void) {\r\n    if (this.eventListeners.has(property)) {\r\n      this.eventListeners.get(property)?.push(callback);\r\n\r\n      return;\r\n    }\r\n\r\n    this.eventListeners.set(property, [callback]);\r\n  }\r\n\r\n  protected notify<K extends keyof T>(property: K, value: T[K]) {\r\n    this.eventListeners.get(property)?.forEach((callback) => callback(value));\r\n  }\r\n}\r\n","import { Icon } from './icon';\r\nimport { Model } from './model';\r\nimport { Point } from './point';\r\n\r\ninterface ITile {\r\n  position: Point;\r\n  icon: Icon | null;\r\n}\r\n\r\nexport class Tile extends Model<ITile> implements ITile {\r\n  constructor(public position: Point, public icon: Icon | null) {\r\n    super();\r\n  }\r\n}\r\n","import { Point } from './point';\r\nimport { Icon } from './Icon';\r\nimport { Tile } from './tile';\r\nimport { Model } from './model';\r\n\r\nconst MOCK_FIELD = [\r\n  [\r\n    Icon.Beacon,\r\n    Icon.Dice,\r\n    Icon.Poop,\r\n    Icon.Dice,\r\n    Icon.Lollypop,\r\n    Icon.Beacon,\r\n    Icon.Chocolate,\r\n    Icon.Dice,\r\n  ],\r\n  [\r\n    Icon.Lollypop,\r\n    Icon.Chocolate,\r\n    Icon.Poop,\r\n    Icon.Dice,\r\n    Icon.Candy,\r\n    Icon.Candy,\r\n    Icon.Lollypop,\r\n    Icon.Candy,\r\n  ],\r\n  [\r\n    Icon.Chocolate,\r\n    Icon.Poop,\r\n    Icon.Beacon,\r\n    Icon.Beacon,\r\n    Icon.Dice,\r\n    Icon.Dice,\r\n    Icon.Beacon,\r\n    Icon.Lollypop,\r\n  ],\r\n  [\r\n    Icon.Dice,\r\n    Icon.Lollypop,\r\n    Icon.Chocolate,\r\n    Icon.Candy,\r\n    Icon.Chocolate,\r\n    Icon.Poop,\r\n    Icon.Candy,\r\n    Icon.Poop,\r\n  ],\r\n  [\r\n    Icon.Candy,\r\n    Icon.Dice,\r\n    Icon.Lollypop,\r\n    Icon.Chocolate,\r\n    Icon.Lollypop,\r\n    Icon.Beacon,\r\n    Icon.Dice,\r\n    Icon.Lollypop,\r\n  ],\r\n  [\r\n    Icon.Dice,\r\n    Icon.Candy,\r\n    Icon.Dice,\r\n    Icon.Beacon,\r\n    Icon.Dice,\r\n    Icon.Poop,\r\n    Icon.Candy,\r\n    Icon.Poop,\r\n  ],\r\n  [\r\n    Icon.Poop,\r\n    Icon.Beacon,\r\n    Icon.Poop,\r\n    Icon.Dice,\r\n    Icon.Chocolate,\r\n    Icon.Lollypop,\r\n    Icon.Dice,\r\n    Icon.Chocolate,\r\n  ],\r\n  [\r\n    Icon.Candy,\r\n    Icon.Chocolate,\r\n    Icon.Candy,\r\n    Icon.Lollypop,\r\n    Icon.Beacon,\r\n    Icon.Chocolate,\r\n    Icon.Beacon,\r\n    Icon.Lollypop,\r\n  ],\r\n].flat();\r\n\r\ninterface IBoard {\r\n  readonly size: number;\r\n  score: number;\r\n  tiles: Array<Tile>;\r\n}\r\nexport class Board extends Model<IBoard> implements IBoard {\r\n  public score = 0;\r\n  public tiles: Array<Tile> = [];\r\n\r\n  constructor(public readonly size: number = 8) {\r\n    super();\r\n  }\r\n\r\n  generate(): void {\r\n    this.tiles = [];\r\n    this.score = 0;\r\n\r\n    for (let x = 0; x < this.size; x++) {\r\n      for (let y = 0; y < this.size; y++) {\r\n        const position = new Point(x, y);\r\n\r\n        this.tiles.push(new Tile(position, this.getIcon(position)));\r\n      }\r\n    }\r\n\r\n    this.notify('tiles', this.tiles);\r\n  }\r\n\r\n  findByPosition(x: number, y: number): Tile | undefined {\r\n    return this.tiles[x * this.size + y];\r\n  }\r\n\r\n  findVerticalLine(x: number): Array<Tile> {\r\n    const line: Array<Tile> = [];\r\n\r\n    // using for loop helps to reduce unnecessary steps while searching required item\r\n    for (let y = 0; y < this.size; y++) {\r\n      const tile = this.findByPosition(x, y);\r\n      if (!tile) {\r\n        continue;\r\n      }\r\n\r\n      line.push(tile);\r\n    }\r\n\r\n    return line;\r\n  }\r\n\r\n  findHorizontalLine(y: number): Array<Tile> {\r\n    const line: Array<Tile> = [];\r\n\r\n    // using for loop helps to reduce unnecessary steps while searching required item\r\n    for (let x = 0; x < this.size; x++) {\r\n      const tile = this.findByPosition(x, y);\r\n      if (!tile) {\r\n        continue;\r\n      }\r\n\r\n      line.push(tile);\r\n    }\r\n\r\n    return line;\r\n  }\r\n\r\n  swapTiles(t1: Tile, t2: Tile): void {\r\n    const idxT1 = this.tiles.indexOf(t1);\r\n    const idxT2 = this.tiles.indexOf(t2);\r\n\r\n    if (idxT1 < 0 || idxT2 < 0) {\r\n      return;\r\n    }\r\n\r\n    const position = t1.position;\r\n    t1.position = t2.position;\r\n    t2.position = position;\r\n\r\n    this.tiles[idxT1] = t2;\r\n    this.tiles[idxT2] = t1;\r\n  }\r\n\r\n  resolveMatches(): void {\r\n    for (let i = 0; i < this.size; i++) {\r\n      [\r\n        ...Board.findClusters(this.findVerticalLine(i)),\r\n        ...Board.findClusters(this.findHorizontalLine(i)),\r\n      ]\r\n        .filter((tile) => tile.length >= 3)\r\n        .flat()\r\n        .forEach((tile) => (tile.icon = null));\r\n    }\r\n  }\r\n\r\n  hasMatches(): boolean {\r\n    for (let i = 0; i < this.size; i++) {\r\n      const hasMatches =\r\n        [\r\n          ...Board.findClusters(this.findVerticalLine(i)),\r\n          ...Board.findClusters(this.findHorizontalLine(i)),\r\n        ].filter((tile) => tile.length >= 3).length > 0;\r\n\r\n      if (hasMatches) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  shiftItems() {\r\n    for (let x = 0; x < this.size; x++) {\r\n      const line = this.findVerticalLine(x);\r\n\r\n      for (let i = line.length - 1; i >= 0; i--) {\r\n        for (let j = i - 1; j >= 0; j--) {\r\n          const current = line[i];\r\n          const next = line[j];\r\n\r\n          if (!current.icon && !next.icon) {\r\n            continue;\r\n          }\r\n\r\n          if (!current.icon && next.icon) {\r\n            this.swapTiles(current, next);\r\n            line[i] = next;\r\n            line[j] = current;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // move all empty tiles out of boundaries\r\n    this.tiles.forEach((tile) => {\r\n      if (tile.icon) {\r\n        return;\r\n      }\r\n\r\n      tile.position = new Point(tile.position.x, tile.position.y - this.size);\r\n    });\r\n  }\r\n\r\n  calculateScore(multiplier: number) {\r\n    console.log(multiplier);\r\n\r\n    this.tiles.forEach((tile) => {\r\n      if (tile.icon) {\r\n        return;\r\n      }\r\n\r\n      this.score += 100 * multiplier;\r\n    });\r\n  }\r\n\r\n  fillUp() {\r\n    this.tiles.forEach((tile) => {\r\n      if (tile.icon) {\r\n        return;\r\n      }\r\n\r\n      const position = new Point(tile.position.x, tile.position.y + this.size);\r\n\r\n      tile.position = position;\r\n      tile.icon = this.getIcon(position);\r\n    });\r\n  }\r\n\r\n  getIcon({ x, y }: Point): Icon {\r\n    let possibleTypes = [\r\n      Icon.Beacon,\r\n      Icon.Candy,\r\n      Icon.Chocolate,\r\n      Icon.Dice,\r\n      Icon.Lollypop,\r\n      Icon.Poop,\r\n    ];\r\n\r\n    // get top left and top elements in order to get icons we dont want to omit\r\n    // this approach helps to ensure absents of existing matches on generation step\r\n    const previousLeft = this.findByPosition(x, y - 1);\r\n    const previousTop = this.findByPosition(x - 1, y);\r\n\r\n    possibleTypes = possibleTypes.filter(\r\n      (icon) => ![previousTop?.icon, previousLeft?.icon].includes(icon)\r\n    );\r\n\r\n    return possibleTypes[Math.floor(Math.random() * possibleTypes.length)];\r\n  }\r\n\r\n  static areSwappable(t1: Tile, t2: Tile): boolean {\r\n    if (t1.icon === t2.icon) {\r\n      return false;\r\n    }\r\n\r\n    if (!t1.icon || !t2.icon) {\r\n      return false;\r\n    }\r\n\r\n    if (Point.areSiblings(t1.position, t2.position)) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  static findClusters(tiles: Array<Tile>): Array<Array<Tile>> {\r\n    const clusters: Array<Array<Tile>> = [];\r\n    let cluster: Array<Tile> = [];\r\n\r\n    for (let i = 0; i < tiles.length; i++) {\r\n      const element = tiles[i];\r\n\r\n      if (!cluster.length) {\r\n        cluster.push(element);\r\n\r\n        continue;\r\n      }\r\n\r\n      if (cluster[0].icon === element.icon) {\r\n        cluster.push(element);\r\n\r\n        continue;\r\n      }\r\n\r\n      clusters.push(cluster);\r\n      cluster = [element];\r\n    }\r\n\r\n    clusters.push(cluster);\r\n\r\n    return clusters;\r\n  }\r\n\r\n  /**\r\n   * Convert array to matrix, for debugging purposes\r\n   * @returns Matrix with icons\r\n   */\r\n  toMatrix(): Array<Array<Tile['icon'] | undefined>> {\r\n    const matrix = [];\r\n\r\n    for (let y = 0; y < this.size; y++) {\r\n      const row = [];\r\n      for (let x = 0; x < this.size; x++) {\r\n        row.push(this.findByPosition(x, y)?.icon);\r\n      }\r\n\r\n      matrix.push(row);\r\n    }\r\n\r\n    return matrix;\r\n  }\r\n}\r\n","export const delay = (timeout: number): Promise<void> =>\r\n  new Promise((resolve) => {\r\n    setTimeout(resolve, timeout);\r\n  });\r\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"hFnwJ\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"1Zl8G\")).toString();","type GameAudio = 'pop' | 'swipe';\r\ntype AudioOptions = Partial<Pick<HTMLAudioElement, 'playbackRate' | 'volume'>>;\r\n\r\nconst GAME_AUDIO_URLS = new Map<GameAudio, URL>([\r\n  ['pop', new URL('../../public/sounds/pop.m4a', import.meta.url)],\r\n  ['swipe', new URL('../../public/sounds/swipe.m4a', import.meta.url)],\r\n]);\r\n\r\nexport const loadAudio = (\r\n  name: GameAudio,\r\n  options: AudioOptions = {}\r\n): HTMLAudioElement => {\r\n  const audio = new Audio(GAME_AUDIO_URLS.get(name)?.toString());\r\n\r\n  (Object.keys(options) as Array<keyof AudioOptions>).forEach((key) => {\r\n    audio[key] = options[key] || audio[key];\r\n  });\r\n\r\n  return audio;\r\n};\r\n","import { Board } from './board';\r\nimport { Tile } from './tile';\r\nimport { Timer } from './timer';\r\n\r\nimport { delay, loadAudio } from './utils';\r\n\r\nconst pop = loadAudio('pop', { volume: 0.07 });\r\nconst swap = loadAudio('swipe', { volume: 0.07 });\r\n\r\ntype TileElement = HTMLDivElement & {\r\n  tile: Tile;\r\n};\r\n\r\nconst SIZE = 8;\r\n\r\nconst field = document.getElementById('field');\r\nconst score = document.getElementById('score');\r\nconst time = document.getElementById('time');\r\nconst multiplierElement = document.getElementById('multiplier');\r\n\r\nconst effect = new KeyframeEffect(\r\n  multiplierElement,\r\n  [{ opacity: 1 }, { transform: 'scale(1.5)' }, { opacity: 0 }],\r\n  {\r\n    duration: 500,\r\n    direction: 'normal',\r\n    easing: 'ease-in-out',\r\n    fill: 'forwards',\r\n  }\r\n);\r\n\r\nconst animation = new Animation(effect, document.timeline);\r\n\r\nfunction setElementPosition(element: TileElement, position: Tile['position']) {\r\n  element.style.top = `${position.y}em`;\r\n  element.style.left = `${position.x}em`;\r\n}\r\n\r\nconst board = new Board(SIZE);\r\nconst timer = new Timer(15);\r\n\r\nlet currentTile: TileElement | null = null;\r\nconst getTileClickHandler = (\r\n  tileElement: TileElement\r\n): (() => Promise<void>) => {\r\n  return async () => {\r\n    if (!currentTile) {\r\n      currentTile = tileElement;\r\n      tileElement.classList.add('active');\r\n      timer.start();\r\n\r\n      return;\r\n    }\r\n\r\n    currentTile.classList.remove('active');\r\n\r\n    if (currentTile === tileElement) {\r\n      currentTile = null;\r\n\r\n      return;\r\n    }\r\n\r\n    let multiplier = 0;\r\n\r\n    // TODO: extract into separate function\r\n    if (Board.areSwappable(currentTile.tile, tileElement.tile)) {\r\n      board.swapTiles(currentTile.tile, tileElement.tile);\r\n      await swap.play();\r\n\r\n      if (board.hasMatches()) {\r\n        do {\r\n          multiplier++;\r\n\r\n          await delay(400);\r\n\r\n          board.resolveMatches();\r\n          board.shiftItems();\r\n          board.calculateScore(multiplier);\r\n          timer.add(5);\r\n\r\n          await pop.play();\r\n\r\n          if (multiplierElement) {\r\n            multiplierElement.innerText = `${multiplier}X`;\r\n            animation.play();\r\n          }\r\n\r\n          await delay(400);\r\n\r\n          board.fillUp();\r\n        } while (board.hasMatches());\r\n      } else {\r\n        // revert swap\r\n        await delay(400);\r\n        await swap.play();\r\n\r\n        board.swapTiles(currentTile.tile, tileElement.tile);\r\n      }\r\n\r\n      timer.start();\r\n\r\n      // console.table(board.toMatrix());\r\n    }\r\n\r\n    currentTile = null;\r\n  };\r\n};\r\n\r\nboard.subscribe('tiles', (tiles) => {\r\n  if (!field) {\r\n    return;\r\n  }\r\n\r\n  field.style.width = `${board.size}em`;\r\n  field.style.height = `${board.size}em`;\r\n\r\n  const tileElements = tiles.map((tile) => {\r\n    const tileElement = document.createElement('div') as TileElement;\r\n\r\n    tileElement.tile = tile;\r\n    tileElement.classList.add('tile', tile.icon || '');\r\n\r\n    setElementPosition(tileElement, tile.position);\r\n\r\n    tile.subscribe('position', (position) => {\r\n      setElementPosition(tileElement, position);\r\n    });\r\n\r\n    tile.subscribe('icon', (icon) => {\r\n      if (!tile.icon && !icon) {\r\n        return;\r\n      }\r\n\r\n      if (tile.icon) {\r\n        tileElement.classList.remove(tile.icon);\r\n      }\r\n\r\n      if (icon) {\r\n        tileElement.classList.add(icon);\r\n      }\r\n    });\r\n\r\n    tileElement.addEventListener('click', getTileClickHandler(tileElement));\r\n\r\n    return tileElement;\r\n  });\r\n\r\n  field.replaceChildren(...tileElements);\r\n});\r\n\r\nboard.subscribe('score', (value) => {\r\n  if (!score) {\r\n    return;\r\n  }\r\n\r\n  score.innerText = `${value}`;\r\n});\r\n\r\ntimer.subscribe('time', (value) => {\r\n  if (!time) {\r\n    return;\r\n  }\r\n\r\n  time.innerText = `${new Date(value * 1000).toISOString().substring(14, 19)}`;\r\n\r\n  if (value === 0) {\r\n    // wait before timer sets time value\r\n    // TODO: show game over\r\n    delay(1000).then(() => {\r\n      timer.reset();\r\n      board.generate();\r\n    });\r\n\r\n    return;\r\n  }\r\n});\r\n\r\nwindow.addEventListener('resize', function (event) {\r\n  if (!field) {\r\n    return;\r\n  }\r\n\r\n  const tileSize = (window.innerWidth - 10 * 2) / board.size;\r\n\r\n  field.style.fontSize = `${tileSize}px`;\r\n});\r\nboard.generate();\r\n\r\n// expose board to window to perform debugging in browser\r\n(window as any).board = board;\r\n(window as any).timer = timer;\r\n(window as any).animation = animation;\r\n","import { Model } from './model';\r\n\r\ninterface ITimer {\r\n  time: number;\r\n  add: (seconds: number) => void;\r\n  stop: () => void;\r\n  reset: () => void;\r\n  start: () => void;\r\n}\r\n\r\nexport class Timer extends Model<ITimer> implements ITimer {\r\n  private interval?: number | null;\r\n\r\n  public time: number;\r\n\r\n  constructor(private seconds: number) {\r\n    super();\r\n\r\n    this.time = seconds;\r\n  }\r\n\r\n  public add(seconds: number) {\r\n    this.time += seconds;\r\n  }\r\n\r\n  public start(): void {\r\n    if (this.interval) {\r\n      return;\r\n    }\r\n\r\n    this.interval = setInterval(() => {\r\n      if (this.time === 0) {\r\n        this.stop();\r\n\r\n        return;\r\n      }\r\n\r\n      this.time--;\r\n    }, 1000);\r\n  }\r\n\r\n  public stop(): void {\r\n    if (!this.interval) {\r\n      return;\r\n    }\r\n\r\n    clearInterval(this.interval);\r\n    this.interval = null;\r\n  }\r\n\r\n  public reset(): void {\r\n    this.time = this.seconds;\r\n  }\r\n}\r\n"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$ee083671c43a5e14$export$baf26146a414f24a","constructor","x","y","static","point1","point2","Math","abs","$640bec87b4a24149$export$f04a61298a47a40f","$0688557bb19ac86e$export$a1edc412be3e1841","eventListeners","Map","_this","this","Proxy","set","target","property","value","receiver","notify","Reflect","subscribe","callback","has","get","push","forEach","$2b62a2f835f6fc0e$export$235cb65c20ad2b7","position","icon","super","Beacon","Dice","Poop","Lollypop","Chocolate","Candy","flat","$b2ebc7535321c5c8$export$dc537a3a3893548e","size","score","tiles","generate","getIcon","findByPosition","findVerticalLine","line","tile","findHorizontalLine","swapTiles","t1","t2","idxT1","indexOf","idxT2","resolveMatches","findClusters","filter","hasMatches","shiftItems","j","current","next","calculateScore","multiplier","console","log","fillUp","possibleTypes","previousLeft","previousTop","includes","floor","random","areSiblings","clusters","cluster","element","matrix","row","$c33fac243aad6b84$export$1391212d75b2ee65","timeout","Promise","resolve","setTimeout","$b5c58ef057f52a36$exports","URL","import","meta","url","toString","$8f21db189f3b9e37$exports","$b4ac20a090b5ae9a$var$GAME_AUDIO_URLS","$b4ac20a090b5ae9a$export$46ab24e432863f2b","name","options","audio","Audio","key","$ad2bcec7a0192558$var$pop","volume","$ad2bcec7a0192558$var$swap","$ad2bcec7a0192558$var$field","document","getElementById","$ad2bcec7a0192558$var$score","$ad2bcec7a0192558$var$time","$ad2bcec7a0192558$var$multiplierElement","$ad2bcec7a0192558$var$effect","KeyframeEffect","opacity","transform","duration","direction","easing","fill","$ad2bcec7a0192558$var$animation","Animation","timeline","$ad2bcec7a0192558$var$setElementPosition","style","top","left","$ad2bcec7a0192558$var$board","$ad2bcec7a0192558$var$timer","seconds","time","add","start","interval","setInterval","stop","clearInterval","reset","$ad2bcec7a0192558$var$currentTile","width","height","tileElements","map","tileElement","createElement","classList","remove","addEventListener","async","areSwappable","play","innerText","$ad2bcec7a0192558$var$getTileClickHandler","replaceChildren","Date","toISOString","substring","then","window","event","tileSize","innerWidth","fontSize","board","timer","animation"],"version":3,"file":"index.d1e4b8e8.js.map"}